
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSrightSUPALPHA BETA COS DELTA DIVIDE FRAC GAMMA IIINT IINT INT LBRACE LOG LPAREN MINUS NEWLINE NUMBER PI PLUS RBRACE RPAREN SIN SQRT SUP TAN TIMES VARIABLEexpression : expression PLUS term\n                  | expression MINUS termexpression : termterm : term TIMES factor\n            | term DIVIDE factorterm : factorfactor : NUMBERfactor : VARIABLEfactor : LPAREN expression RPARENfactor : SIN LPAREN expression RPAREN\n              | COS LPAREN expression RPAREN\n              | TAN LPAREN expression RPARENfactor : LOG LPAREN expression RPARENfactor : SQRT LBRACE expression RBRACEfactor : FRAC LBRACE expression RBRACE LBRACE expression RBRACEfactor : INT factorfactor : INT LBRACE expression RBRACE SUP LBRACE expression RBRACE expressionfactor : IINT LBRACE expression RBRACE SUP LBRACE expression RBRACE expressionfactor : IIINT LBRACE expression RBRACE SUP LBRACE expression RBRACE expressionfactor : ALPHAfactor : BETAfactor : GAMMAfactor : DELTAfactor : PIfactor : MINUS factor %prec UMINUSexpression : expression NEWLINE expressionfactor : factor SUP factor'
    
_lr_action_items = {'NUMBER':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'VARIABLE':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'LPAREN':([0,3,7,8,9,10,11,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[7,7,7,30,31,32,33,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'SIN':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'COS':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'TAN':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'LOG':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'SQRT':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'FRAC':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'INT':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'IINT':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'IIINT':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'ALPHA':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'BETA':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'GAMMA':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'DELTA':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'PI':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'MINUS':([0,1,2,3,4,5,6,7,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[3,23,-3,3,-6,-7,-8,3,3,-20,-21,-22,-23,-24,3,3,3,3,3,-25,3,23,3,3,3,3,3,3,-16,3,3,3,-1,-2,23,-4,-5,-27,-9,23,23,23,23,23,23,23,23,23,-10,-11,-12,-13,-14,3,23,3,3,3,-15,23,23,23,3,3,3,23,23,23,]),'$end':([1,2,4,5,6,17,18,19,20,21,27,36,40,41,42,43,44,45,46,56,57,58,59,60,73,80,81,82,],[0,-3,-6,-7,-8,-20,-21,-22,-23,-24,-25,-16,-1,-2,-26,-4,-5,-27,-9,-10,-11,-12,-13,-14,-15,-17,-18,-19,]),'PLUS':([1,2,4,5,6,17,18,19,20,21,27,29,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,69,73,74,75,76,80,81,82,],[22,-3,-6,-7,-8,-20,-21,-22,-23,-24,-25,22,-16,-1,-2,22,-4,-5,-27,-9,22,22,22,22,22,22,22,22,22,-10,-11,-12,-13,-14,22,-15,22,22,22,22,22,22,]),'NEWLINE':([1,2,4,5,6,17,18,19,20,21,27,29,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,69,73,74,75,76,80,81,82,],[24,-3,-6,-7,-8,-20,-21,-22,-23,-24,-25,24,-16,-1,-2,24,-4,-5,-27,-9,24,24,24,24,24,24,24,24,24,-10,-11,-12,-13,-14,24,-15,24,24,24,24,24,24,]),'RPAREN':([2,4,5,6,17,18,19,20,21,27,29,36,40,41,42,43,44,45,46,47,48,49,50,56,57,58,59,60,73,80,81,82,],[-3,-6,-7,-8,-20,-21,-22,-23,-24,-25,46,-16,-1,-2,-26,-4,-5,-27,-9,56,57,58,59,-10,-11,-12,-13,-14,-15,-17,-18,-19,]),'SUP':([2,4,5,6,17,18,19,20,21,27,36,40,41,42,43,44,45,46,56,57,58,59,60,62,63,64,73,80,81,82,],[-3,28,-7,-8,-20,-21,-22,-23,-24,28,28,-1,-2,-26,28,28,28,-9,-10,-11,-12,-13,-14,66,67,68,-15,-17,-18,-19,]),'TIMES':([2,4,5,6,17,18,19,20,21,27,36,40,41,42,43,44,45,46,56,57,58,59,60,73,80,81,82,],[25,-6,-7,-8,-20,-21,-22,-23,-24,-25,-16,25,25,-26,-4,-5,-27,-9,-10,-11,-12,-13,-14,-15,-17,-18,-19,]),'DIVIDE':([2,4,5,6,17,18,19,20,21,27,36,40,41,42,43,44,45,46,56,57,58,59,60,73,80,81,82,],[26,-6,-7,-8,-20,-21,-22,-23,-24,-25,-16,26,26,-26,-4,-5,-27,-9,-10,-11,-12,-13,-14,-15,-17,-18,-19,]),'RBRACE':([2,4,5,6,17,18,19,20,21,27,36,40,41,42,43,44,45,46,51,52,53,54,55,56,57,58,59,60,69,73,74,75,76,80,81,82,],[-3,-6,-7,-8,-20,-21,-22,-23,-24,-25,-16,-1,-2,-26,-4,-5,-27,-9,60,61,62,63,64,-10,-11,-12,-13,-14,73,-15,77,78,79,-17,-18,-19,]),'LBRACE':([12,13,14,15,16,61,66,67,68,],[34,35,37,38,39,65,70,71,72,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,7,24,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[1,29,42,47,48,49,50,51,52,53,54,55,69,74,75,76,80,81,82,]),'term':([0,7,22,23,24,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[2,2,40,41,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'factor':([0,3,7,14,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,65,70,71,72,77,78,79,],[4,27,4,36,4,4,4,43,44,45,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression_binop','parser.py',13),
  ('expression -> expression MINUS term','expression',3,'p_expression_binop','parser.py',14),
  ('expression -> term','expression',1,'p_expression_term','parser.py',18),
  ('term -> term TIMES factor','term',3,'p_term_binop','parser.py',22),
  ('term -> term DIVIDE factor','term',3,'p_term_binop','parser.py',23),
  ('term -> factor','term',1,'p_term_factor','parser.py',31),
  ('factor -> NUMBER','factor',1,'p_factor_number','parser.py',35),
  ('factor -> VARIABLE','factor',1,'p_factor_variable','parser.py',39),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','parser.py',43),
  ('factor -> SIN LPAREN expression RPAREN','factor',4,'p_factor_trig','parser.py',47),
  ('factor -> COS LPAREN expression RPAREN','factor',4,'p_factor_trig','parser.py',48),
  ('factor -> TAN LPAREN expression RPAREN','factor',4,'p_factor_trig','parser.py',49),
  ('factor -> LOG LPAREN expression RPAREN','factor',4,'p_factor_log','parser.py',58),
  ('factor -> SQRT LBRACE expression RBRACE','factor',4,'p_factor_sqrt','parser.py',62),
  ('factor -> FRAC LBRACE expression RBRACE LBRACE expression RBRACE','factor',7,'p_factor_frac','parser.py',66),
  ('factor -> INT factor','factor',2,'p_factor_int_simple','parser.py',77),
  ('factor -> INT LBRACE expression RBRACE SUP LBRACE expression RBRACE expression','factor',9,'p_factor_int_with_limits','parser.py',81),
  ('factor -> IINT LBRACE expression RBRACE SUP LBRACE expression RBRACE expression','factor',9,'p_factor_iint_with_limits','parser.py',96),
  ('factor -> IIINT LBRACE expression RBRACE SUP LBRACE expression RBRACE expression','factor',9,'p_factor_iiint_with_limits','parser.py',111),
  ('factor -> ALPHA','factor',1,'p_factor_alpha','parser.py',126),
  ('factor -> BETA','factor',1,'p_factor_beta','parser.py',130),
  ('factor -> GAMMA','factor',1,'p_factor_gamma','parser.py',134),
  ('factor -> DELTA','factor',1,'p_factor_delta','parser.py',138),
  ('factor -> PI','factor',1,'p_factor_pi','parser.py',142),
  ('factor -> MINUS factor','factor',2,'p_factor_uminus','parser.py',146),
  ('expression -> expression NEWLINE expression','expression',3,'p_expression_newline','parser.py',150),
  ('factor -> factor SUP factor','factor',3,'p_factor_power','parser.py',154),
]
